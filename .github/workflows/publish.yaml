name: Publish wheel on tag and deploy

on:
  push:
    branches:
      - 'main'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install devpi-client  # Install devpi-client

    - name: Authenticate and upload to devpi
      run: |
        devpi use https://pypi.spfluo.ovh
        devpi login jean --password=${{ secrets.DEVPI_PASSWORD }}
        devpi use jean/dev
        devpi upload
      env:
        DEVPI_PASSWORD: ${{ secrets.DEVPI_PASSWORD }}
  
  compile-requirements:
    runs-on: ubuntu-latest

    env:
      python_version: "3.11"
      python_version_strip: "311"

    strategy:
      matrix:
        platform: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
        gpu: [false, true]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Cache uv
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-cache
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'  # Specify the Python version you need

    - name: Install pip-tools
      run: pip install uv

    - name: Run pip-compile
      if: ${{ !matrix.gpu }}
      run: >
        uv pip compile pyproject.toml
        -o requirements-cp${{ env.python_version_strip }}-${{ matrix.platform }}.txt
        -q
        --upgrade
        --python-version ${{ env.python_version }}
        --python-platform ${{ matrix.platform }}
    
    - name: Run pip-compile gpu
      if: ${{ matrix.gpu }}
      run: >
        uv pip compile pyproject.toml
        -o requirements-cp${{ env.python_version_strip }}-${{ matrix.platform }}-gpu.txt
        -q
        --upgrade
        --python-version ${{ env.python_version }}
        --python-platform ${{ matrix.platform }}
        --extra=gpu
        --index-url https://pypi.spfluo.ovh/jean/dev-pytorch-cu118/+simple/  # pytorch is in the deps of spfluo-app[gpu], so we need a custom index

    - name: Get spfluo-app version
      id: version
      run: |
        pip install hatch
        echo "version=$(hatch version)" >> "$GITHUB_OUTPUT"
    
    - name: Append to requirements spfluo-app
      run: |
        REQUIREMENT_FILE=$(ls requirements*.txt | head -n 1)
        echo "spfluo-app={{ steps.version.outputs.version }}" >> $REQUIREMENT_FILE

    - name: Upload requirements files
      if: ${{ !matrix.gpu }}
      uses: actions/upload-artifact@v4
      with:
        name: requirements-${{ matrix.platform }}
        path: requirements*.txt
        retention-days: 1
    
    - name: Upload requirements files gpu
      if: ${{ matrix.gpu }}
      uses: actions/upload-artifact@v4
      with:
        name: requirements-${{ matrix.platform }}-gpu
        path: requirements*-gpu.txt
        retention-days: 1

  build-executable:
    needs: compile-requirements
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86_64-pc-windows-msvc]
        gpu: [false, true]
    
    env:
      PYAPP_VERSION: "0.22.0"
      PYAPP_PROJECT_NAME: "spfluo-app"
      PYAPP_PROJECT_VERSION: "0.1.1"
      PYAPP_PROJECT_DEPENDENCY_FILE: "${{ github.workspace }}/requirements-cp311-${{ matrix.platform }}.txt"
      PYAPP_IS_GUI: 1
      PYAPP_EXEC_SCRIPT: "${{ github.workspace }}/src/spfluo_app/__main__.py"
      PYAPP_PYTHON_VERSION: "3.11"
      PYAPP_UV_ENABLED: 1 
      TARGET_DIR: "${{ github.workspace }}/target"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Cache cargo target directory
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/target
        key: cargo-cache
    
    - name: Get pip index
      shell: pwsh
      run: |
        if ($${{ matrix.gpu }}) {
            echo "PYAPP_PIP_EXTRA_ARGS=https://pypi.spfluo.ovh/jean/dev-pytorch-cu118/+simple" >> $env:GITHUB_ENV
            echo "PYAPP_PROJECT_DEPENDENCY_FILE=${{ github.workspace }}/requirements-cp311-${{ matrix.platform }}-gpu.txt" >> $env:GITHUB_ENV
        } else {
            echo "PYAPP_PIP_EXTRA_ARGS=https://pypi.spfluo.ovh/jean/dev/+simple" >> $env:GITHUB_ENV
            echo "PYAPP_PROJECT_DEPENDENCY_FILE=${{ github.workspace }}/requirements-cp311-${{ matrix.platform }}.txt" >> $env:GITHUB_ENV
        }
        
    - name: Download requirements.txt
      uses: actions/download-artifact@v4
      if: ${{ !matrix.gpu }}
      with:
        name: requirements-${{ matrix.platform }}

    - name: Download requirements.txt gpu
      uses: actions/download-artifact@v4
      if: ${{ matrix.gpu }}
      with:
        name: requirements-${{ matrix.platform }}-gpu

    - name: Download pyapp Source
      run: |
        Invoke-WebRequest -Uri "https://github.com/ofek/pyapp/releases/download/v$env:PYAPP_VERSION/source.tar.gz" -OutFile 'pyapp-source.tar.gz'
      shell: pwsh

    - name: Extract pyapp Source
      run: tar -xzf pyapp-source.tar.gz
      shell: pwsh

    - name: Build the Project
      env:
        RUST_BACKTRACE: "full"
        CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG: "true"
      run: |
        Set-Location -Path "pyapp-v$env:PYAPP_VERSION"
        cargo build --release --target-dir $env:TARGET_DIR
        Move-Item -Path "$env:TARGET_DIR/release/pyapp.exe" -Destination "${{ github.workspace }}/spfluo-app.exe" -Force
      shell: pwsh
    
    - name: Upload executable
      if: ${{ !matrix.gpu }}
      uses: actions/upload-artifact@v4
      with:
        name: executable
        path: spfluo-app.exe
        retention-days: 1
    
    - name: Upload executable gpu
      if: ${{ matrix.gpu }}
      uses: actions/upload-artifact@v4
      with:
        name: executable-gpu
        path: spfluo-app-gpu.exe
        retention-days: 1
  
  create-release:
    needs: [compile-requirements, build-executable]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          requirements*/requirements*.txt 
          executable*/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}